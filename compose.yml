services:
  next:
    build: .
    image: immunefi_next
    env_file:
      - .env.compose
    command: >
      sh -c "npx prisma migrate deploy;
      npx prisma generate;
      npx prisma db seed;
      npm run dev;"
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - immunefi_node_modules:/app/node_modules
    depends_on:
      - postgres

  prisma_studio:
    build: .
    image: immunefi_next
    env_file:
      - .env.compose
    command: npx prisma studio
    ports:
      - "5555:5555"
    volumes:
      - .:/app
      - immunefi_node_modules:/app/node_modules
    depends_on:
      - postgres

  postgres:
    image: "postgres:15.1"
    container_name: immunefi_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: default_db
      POSTGRES_PASSWORD: secretpassword
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
      - immunefi_postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
#    command: >
#      sh -c "su - postgres
#             psql
#             CREATE DATABASE your_db_name;"

volumes:
  immunefi_postgres:
  immunefi_node_modules:
